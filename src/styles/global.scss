@use 'sass:math';
@import './variables.scss';

@import url('https://fonts.googleapis.com/css?family=Open+Sans:300,400,500,600,700');
@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');

*,
*:before,
*:after {
    box-sizing: border-box;
}

/* Needed for displaying the list dropdown in the modal */

body .time-picker-subcontainer {
    z-index: 10000 !important;
}
body .el-select__popper.el-popper.is-light.is-pure {
    z-index: 10000 !important;
}

/*********************************************************/

body {
    font-family: 'Open Sans', sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

::-webkit-scrollbar {
    width: 14px;
}

::-webkit-scrollbar-thumb {
    background: $main-color;
    border: 3px solid rgba(0, 0, 0, 0);
    background-clip: padding-box;
    border-radius: 9999px;
}

svg {
    outline: none;
}

.disabled {
    filter: invert(63%) sepia(56%) saturate(0) hue-rotate(180deg) brightness(100%) contrast(100%);
    pointer-events: none;
    cursor: none;
}

.flex-centered {
    display: flex;
    align-items: center;
    justify-content: center;
}

.buttons-container {
    height: 56px;
}

$animate-width: 40px;
$spinner-width: 1rem;

.so-button {
    border-radius: 20px;
    border: 1px solid $main-color;
    background-color: $main-color;
    color: #ffffff;
    font-size: clamp(12px, 1vw, 14px);
    font-weight: bold;
    padding: clamp(7px, 1vmin, 14px) clamp(7px, 1.5vmin, 45px);
    letter-spacing: 1px;
    text-transform: uppercase;
    transition: transform 80ms ease-in;
    position: relative;
    cursor: pointer;
    user-select: none;
    box-shadow: 0 3px 5px -1px rgb(0 0 0 / 20%), 0 6px 10px 0 rgb(0 0 0 / 14%),
        0 1px 18px 0 rgb(0 0 0 / 12%);
    &:focus {
        outline: 0;
    }
    &.spinner {
        &:after {
            position: absolute;
            content: '';
            width: $spinner-width;
            height: $spinner-width;
            border: 2px solid #fff;
            border-radius: 50%;
            border-left-color: transparent;
            top: 30%;
            left: 27%;
            animation: spin 2s linear infinite;
        }
    }
    &.warning {
        background-color: $warning-yellow;
        border: 1px solid $warning-yellow;
        color: $warning-contrast;
    }
    &.animate {
        width: $animate-width;
        height: $animate-width;
        padding: 0px;
        border-radius: 50%;
        color: transparent;

        &.success:before {
            position: absolute;
            content: '';
            width: $spinner-width;
            height: math.div($spinner-width, 2);
            border: 4px solid #fff;
            border-right: 0;
            border-top: 0;
            left: 50%;
            top: 50%;
            -webkit-transform: translate(-50%, -50%) rotate(0deg) scale(0);
            transform: translate(-50%, -50%) rotate(0deg) scale(0);
            -webkit-animation: success ease-in 0.15s forwards;
            animation: success ease-in 0.15s forwards;
        }

        &.error {
            border: #f44336;
            position: relative;
            -webkit-animation: vibrate ease-in 0.5s forwards;
            animation: vibrate ease-in 0.5s forwards;

            &:before {
                color: #fff;
                position: absolute;
                content: '!';
                font-size: 1.8rem;
                font-weight: bold;
                text-align: center;
                left: 50%;
                top: 50%;
                -webkit-transform: translate(-50%, -50%) scale(0);
                transform: translate(-50%, -50%) scale(0);
                -webkit-animation: error ease-in 0.5s forwards;
                animation: error ease-in 0.5s forwards;
            }
        }
    }
    &.inactive {
        opacity: 0.4;
        cursor: not-allowed;
    }
}

@keyframes spin {
    from {
        transform: rotate(0deg) scale(1);
    }
    to {
        transform: rotate(360deg) scale(1);
    }
}
@-webkit-keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

@keyframes success {
    from {
        transform: translate(-50%, -50%) rotate(0) scale(0);
    }
    to {
        transform: translate(-50%, -50%) rotate(-45deg) scale(1);
    }
}

@-webkit-keyframes success {
    from {
        -webkit-transform: translate(-50%, -50%) rotate(0) scale(0);
    }
    to {
        -webkit-transform: translate(-50%, -50%) rotate(-45deg) scale(1);
    }
}

@keyframes error {
    from {
        transform: translate(-50%, -50%) scale(0);
    }
    to {
        transform: translate(-50%, -50%) scale(1);
        background-color: #f44336;
    }
}

@-webkit-keyframes error {
    from {
        -webkit-transform: translate(-50%, -50%) scale(0);
    }
    to {
        -webkit-transform: translate(-50%, -50%) scale(1);
        background-color: #f44336;
    }
}

@keyframes vibrate {
    0%,
    30%,
    60%,
    85%,
    100% {
        left: 0;
        background-color: #f44336;
    }
    10%,
    40%,
    90%,
    70% {
        left: -2px;
        background-color: #f44336;
    }
    20%,
    50%,
    80%,
    95% {
        left: 2px;
        background-color: #f44336;
    }
}

button:active {
    transform: scale(0.95);
}

.transparent {
    background: transparent;
    border: 1px solid white;
}

// h1 {
//     font-size: min(5vw, 32px);
//     margin-top: 0;
// }

// h2 {
//     font-size: min(4vw, 28px);
//     margin-top: 0;
// }

// h3 {
//     font-size: min(3vw, 24px);
//     margin-top: 0;
// }

p {
    font-size: clamp(12px, 2.5vw, 18px);
}

$switch-width: clamp(3em, 6vw, 6em);
$switch-height: calc(0.4285 * #{$switch-width});

.toggle-switch {
    height: fit-content;
    position: relative;
    display: inline-block;
    input {
        height: 40px;
        left: 0;
        opacity: 0;
        position: absolute;
        top: 0;
        width: 40px;
        &:checked + label {
            &:before {
                left: calc(#{$switch-width} * 0.5982);
            }
        }
        &:checked ~ span {
            left: 1px;
        }
        &:checked ~ svg {
            left: calc(#{$switch-width} * 0.65);
        }
    }
    label {
        height: $switch-height;
        width: $switch-width;
        background: #2e394d;
        display: inline-block;
        border-radius: 50px;
        position: relative;
        transition: all 0.3s ease;
        transform-origin: 20% center;
        cursor: pointer;
        background: #ffffff;
        border: 0.5px solid rgba(255, 255, 255, 0.31);
        box-shadow: inset 0px 0px 4px 0px rgba(0, 0, 0, 0.2), 0 -3px 4px rgba(0, 0, 0, 0.15);
        &:before {
            position: absolute;
            display: block;
            content: '';
            top: calc(#{$switch-height} * 0.0833);
            left: calc(#{$switch-height} * 0.0833);
            width: calc(#{$switch-height} * 0.7666);
            height: calc(#{$switch-height} * 0.7666);
            box-shadow: inset 0.5px -1px 1px rgb(0 0 0 / 35%);
            background: $main-color;
            transform: rotate(-25deg);
            border: 2px solid $main-color;
            border-radius: 2em;
            transition: 0.3s ease;
        }
        &:after {
            content: '';
            background: transparent;
            height: calc(100% + 8px);
            border-radius: 30px;
            top: -5px;
            width: calc(100% + 8px);
            left: -4px;
            z-index: 0;
            box-shadow: inset 0px 2px 4px -2px rgba(0, 0, 0, 0.2),
                0px 1px 2px 0px rgba(151, 151, 151, 0.2);
        }
    }
    svg {
        position: absolute;
        fill: white;
        top: calc(#{$switch-height} * 0.2);
        left: calc(#{$switch-height} * 0.1);
        pointer-events: none;
        width: calc(#{$switch-width} * 0.2666);
        height: auto;
    }
    span {
        top: calc(#{$switch-height} * 0.3);
        position: absolute;
        text-transform: uppercase;
        left: 40%;
        font-size: calc(#{$switch-width} / 7);
        pointer-events: none;
        transition: all 0.3s ease;
        width: 60%;
        white-space: nowrap;
    }
}

.icon-container {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;

    svg {
        width: 100%;
        height: 100%;
        fill: $main-color;
    }

    &.interactive {
        cursor: pointer;

        svg {
            fill: $inactive-color;
            transition: all 0.3s ease-in-out;
        }

        &:hover svg {
            fill: $main-color;
            transform: scale(1.1);
        }
    }

    &.active svg {
        fill: $main-color;
    }
}

.so-title {
    margin: 0px 0px 10px 0px;
    color: $main-color;
    font-weight: 900;
    white-space: nowrap;
}

.main-colored {
    color: $main-color;
}

@media only screen and (max-width: $mobile-width-query-threshold) {
    .so-title {
        font-size: 14px;
    }
}
